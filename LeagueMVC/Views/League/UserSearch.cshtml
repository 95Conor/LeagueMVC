@model  LeagueMVC.ViewModels.Classes.UserSearchViewModel

    <h1>User Search</h1><br />
    
    @using (Html.BeginForm())
    {
        @Html.LabelFor(model => model.UsernameInput)<br />
        @Html.TextBoxFor(model => model.UsernameInput)

        <input id="btnSubmit" type="submit" value="Search" />
    }<br />

    @if (Model.FoundResult)
    {
        <hr />
        <h1>Results</h1>
        <hr />

        <h2>Username</h2>

        <p> @Model.Username </p>

        <h2>User ID</h2>

        <p> @Model.UserID </p>

        <h2>Last Login</h2>

        <p> @Model.LastLogin.ToString("dd-MM-yyyy")  (@Model.TimeSinceLastLogin.TotalDays.ToString("0.##"); days ago)</p><hr />

        <h2>Top 20 Champions</h2> <br />

        <ul>
            @{ LeagueMVC.PlayerBadRating.RatingHelper ratingHelper = new LeagueMVC.PlayerBadRating.RatingHelper(); }
            @for (int i = 0; i < 20; i++)
            {
                <li>@Model.TopTwentyChampions[i].champion.Name - @ratingHelper.GetChampionRatingByChampion(Model.TopTwentyChampions[i].champion).Rating.ToString()</li>
            }
        </ul> <hr />

        <h2>Bad Rating: </h2>

        <p> @Model.PlayerBadRating </p>
    }